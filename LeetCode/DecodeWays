package leetCode.medium;

/**
 * Created by Ahmad Eldefrawy.
 */

public class DecodeWays {

    public static void main(String[] args) {
        System.out.println(numDecodings("200"));
    }
    
    // DP solution similar to Fibonacci.
    public int numDecodings(String s) {
        if (s == null || s.length() == 0) {
            return 0;
        }

        int n = s.length();
        int[] memo = new int[n + 1];
        memo[0] = 1;
        memo[1] = s.charAt(0) != '0' ? 1 : 0;

        for (int i = 2; i <= n; i++) {
            int lastNum = Integer.valueOf(s.substring(i - 1, i));
            int lastTwoNum = Integer.valueOf(s.substring(i - 2, i));
            if (lastNum >= 1 && lastNum <= 9) {
                memo[i] += memo[i - 1];
            }
            if (lastTwoNum >= 10 && lastTwoNum <= 26) {
                memo[i] += memo[i - 2];
            }
        }
        return memo[n];
    }
}
