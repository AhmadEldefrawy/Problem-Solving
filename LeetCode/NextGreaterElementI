package leetCode.easy;

import java.util.*;

/**
 * Created by Ahmad Eldefrawy.
 * Time: O(n + m)
 * Space: O(m)
 */
public class NextGreaterElementI {

    public static int[] nextGreaterElement(int[] nums1, int[] nums2) {
        HashMap<Integer, Integer> map = new HashMap<>(); //integer to nextGreatestElement
        Stack<Integer> stack = new Stack<>();
        //We use a stack to keep a decreasing sub-sequence, whenever we see a number x greater than stack.peek()
        // we pop all elements less than x and for all the popped ones, their next greater element is x

        for (int i = 0; i < nums2.length; i++) {
            while (!stack.isEmpty() && nums2[i] > stack.peek()) {
                int top = stack.pop();
                map.put(top, nums2[i]);
            }
            stack.push(nums2[i]);
        }

        for (int i = 0; i < nums1.length; i++) {
            nums1[i] = map.getOrDefault(nums1[i], -1);
        }

        return nums1;
    }
}
