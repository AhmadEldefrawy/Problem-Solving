package leetCode.hard;

import java.util.*;

/**
 * Created by Ahmad Eldefrawy.
 * Time: O(n Log(n)) as Insert in Heap is Log(n)
 */

public class MergekSortedLists {


    public class ListNode {
        int val;
        ListNode next;
        ListNode(int x) {
            val = x;
        }
    }

    public ListNode mergeKLists(ListNode[] lists) {
        if (lists.length == 0) {
            return null;
        }

        PriorityQueue<Integer> pQueue = new PriorityQueue<>();

        for (ListNode current : lists) {
            while (current != null) {
                pQueue.add(current.val);
                current = (current.next != null) ? current.next : null;
            }
        }

        ListNode result = (!pQueue.isEmpty()) ? new ListNode(pQueue.poll()) : null;
        ListNode itr = result;
        while (!pQueue.isEmpty()) {
            itr.next = new ListNode(pQueue.poll());
            itr = itr.next;
        }
        return result;
    }
}
