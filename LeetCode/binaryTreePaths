package leetCode.easy;

import java.util.*;

/**
 * Created by Ahmad Eldefrawy.
 * 
 */
public class BinaryTreePaths {

    public static void main(String[] args) {
        TreeNode root = new TreeNode(1);
        TreeNode two = new TreeNode(2);
        TreeNode three = new TreeNode(3);
        TreeNode four = new TreeNode(4);
        TreeNode five = new TreeNode(5);
        TreeNode six = new TreeNode(6);
        TreeNode seven = new TreeNode(7);
        root.left = two;
        root.right = three;
        two.left = four;
        two.right = five;
        three.left = six;
        three.right = seven;
        binaryTreePaths(root);

    }


    public static List<String> binaryTreePaths(TreeNode root) {
        StringBuilder sb = new StringBuilder();
        List<String> result = new ArrayList<>();

        if (root != null) {
            traverse(root, sb, result);
        }
        return result;
    }

    public static void traverse(TreeNode root, StringBuilder sb, List<String> result) {
        sb.append(root.val);

        if (root.right == null && root.left == null) {
            result.add(sb.toString());
        }

        if (root.left != null) {
            StringBuilder sbLeft = new StringBuilder(sb);
            traverse(root.left, sbLeft.append("->"), result);
        }
        if (root.right != null) {
            StringBuilder sbRight = new StringBuilder(sb);
            traverse(root.right, sbRight.append("->"), result);
        }

    }


    public static class TreeNode {

        int val;
        TreeNode left;
        TreeNode right;

        TreeNode(int x) {
            val = x;
        }
    }
}
